# Copyright (C) 2020 BristolMyers z2sofwares.
#
# Licensed under the Raphielscape Public License, Version 1.c (the "License");
# you may not use this file except in compliance with the License.
#

# DT√ñUserBot - √úm√ºd

""" UserBot ba≈ülanƒüƒ±c """
import importlib
from importlib import import_module
from sqlite3 import connect
from sys import argv
import os
import requests
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP
from .modules import ALL_MODULES
import base64
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
from pySmartDL import SmartDL
from telethon.tl import functions

from random import choice

AFKSTR = [
    "`ƒ∞ndi t…ôcili i≈üim var, daha sonra mesaj atsan olar? Onsuz yenid…ôn g…ôl…ôc…ôm.`",
    "`Bu n√∂mr…ôy…ô z…ông √ßatmƒ±r. Telefon ya s√∂nd√ºr√ºl√ºb yada …ôhat…ô dair…ôsi xaricind…ôdi. Z…ôhm…ôt olmasa yenid…ôn c…ôhd edin.` \n`biiiiiiiiiiiiiiiiiiiiiiiiiiiiip`!",
    "`Bir ne√ß…ô d…ôqiq…ô i√ßind…ô g…ôl…ôc…ôy…ôm. Ancaq g…ôlm…ôs…ôm...\ndaha √ßox g√∂zl…ô.`",
    "`ƒ∞ndi burada deyil…ôm, ba≈üqa yerd…ôy…ôm.`",
    "`ƒ∞nsan sevdiyini itir…ôn zaman\ncanƒ± yanar yanar yanaaaarrrr\nBoy baƒüƒ±≈üla üòÇ bilmirdim burda kims…ô var\nSahibim daha sonra siz…ô yazacaq.`",
    "`B…ôz…ôn h…ôyatdakƒ± …ôn yax≈üƒ± ≈üeyl…ôr g√∂zl…ôm…ôy…ô d…ôy…ôr‚Ä¶\nTez qayƒ±daram.`",
    "`Tez qayƒ±daram,\nama …ôy…ôr geri qayƒ±tmasam,\ndaha sonra qayƒ±daram.`",
    "`H…ôl…ôd…ô anlamadƒ±nsa,\nburada deyil…ôm.`",
    "`Al…ôm qalxsa s…ôni m…ôni m…ônd…ôn alnaƒüa hamƒ±dan alƒ±b g√∂t√ºrr…ôm s…ôni...\nSahibim burada deil ama qruza salacaq mahnƒ±lar oxuya bil…ôr…ôm üòìüö¨`",
    "`7 d…ôniz v…ô 7 √∂lk…ôd…ôn uzaqdayam,\n7 su v…ô 7 qit…ô,\n7 daƒü v…ô 7 t…ôp…ô,\n7 ovala v…ô 7 h√∂y√ºk,\n7 hovuz v…ô 7 g√∂l,\n7 bahar v…ô 7 √ßay,\n7 ≈ü…ôh…ôr v…ô 7 m…ôh…ôll…ô,\n7 blok v…ô 7 ev...\n\nMesajlarƒ±n bel…ô m…ôn…ô √ßatmayacaƒüƒ± yer!`",
    "`ƒ∞ndi klaviaturadan uzaqdayam, ama ekranƒ±nƒ±zda yeterinc…ô y√ºks…ôk s…ôsl…ô qƒ±≈üqƒ±rƒ±ƒü atsanƒ±z, sizi e≈üid…ô bil…ôr…ôm.`",
    "`Bu t…ôr…ôfd…ôn ir…ôll…ôyir…ôm\n---->`",
    "`Bu t…ôr…ôfd…ôn ir…ôll…ôyir…ôm\n<----`",
    "`Z…ôhm…ôt olmasa mesaj buraxƒ±n v…ô m…ôni olduƒüumdan daha √∂n…ômli hiss etdirin.`",
    "`Sahibim burda deil, buna g√∂r…ô m…ôn…ô yazmaƒüƒ± dayandƒ±r.`",
    "`Burda olsaydƒ±m,\nS…ôn…ô harada olduƒüumu dey…ôrdim.\n\nAma m…ôn deil…ôm,\ngeri qayƒ±tdƒ±ƒüƒ±mda m…ônd…ôn soru≈ü...`",
    "`Uzaqlardayam!\nN…ô vaxt qayƒ±daram bilmir…ôm !\nB…ôlk…ô bir ne√ß…ô d…ôqiq…ô sonra!`",
    "`Sahibim indi m…ô≈üƒüuldu. Adƒ±nƒ±zƒ±, n√∂mr…ônizi v…ô adresinizi vers…ôniz ona y√∂nl…ôndir…ôr…ôm v…ô bel…ôlikl…ô geri g…ôldiyi zaman, siz…ô cavab yazar`",
    "`Baƒüƒ±≈ülayƒ±n, sahibim burda deil.\nO g…ôl…ôn…ô q…ôd…ôr m…ôniml…ô danƒ±≈üa bil…ôrs…ôn.\nSahibim siz…ô sonra yazar.`",
    "`D√ºn…ôn gec…ô yar…ô nam…ô yazdƒ±m qalmƒ±≈üam …ôll…ôrd…ô ayaqlarda den…ôn he√ß halƒ±mƒ± soru≈ümazmƒ±? Qalmƒ±≈üam …ôll…ôrd…ô ayaqlarda\nSahibim burda deil ama s…ôn…ô mahnƒ± oxuyajammmm`",
    "`H…ôyat qƒ±sa, d…ôym…ôz qƒ±za...\nN…ôt…ôr zarafat el…ôdim?`",
    "`ƒ∞ndi burada deil…ôm....\nama burda olsaydƒ±m...\n\nbu m√∂ht…ô≈ü…ôm olardƒ± el…ômi qadan alƒ±m ?`",
]

UNAPPROVED_MSG = ("`Salam m…ôn DT√ñUserBot.\n\n`"
                  "`Sahibim s…ôn…ô mesaj atma icaz…ôsi verm…ôyib. `"
                  "`Z…ôhm…ôt olmasa sahibimin aktiv olmasƒ±nƒ± g√∂zl…ôyin, o ancaq mesajlara icaz…ô verir.\n\n`"
                  "`∆èg…ôr √ßox mesaj yazsanƒ±z sizi bloka atmaƒüa m…ôcbur qalacam.`")

DB = connect("dtobrain")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()
INVALID_PH = '\nX∆èTA: Giril…ôn telefon n√∂mr…ôsi yanlƒ±≈üdƒ±r' \
             '\n  M…ôlumat: √ñlk…ô kodunu i≈ül…ôd…ôr…ôk n√∂mr…ônk yaz' \
             '\n       Telefon n√∂mr…ônizi t…ôkrar yoxlayƒ±n.'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("dtobrain").close()
try:
    bot.start()

    # Galeri i√ßin deƒüerler

    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": "`Allah Az…ôrbaycanlƒ±larƒ± qorusun\nDT√ñUserBot …ôla i≈üd…ôyir ‚ö°.`", "afk": str(choice(AFKSTR)), "pm": UNAPPROVED_MSG))}

    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "pm"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            PLUGIN_MESAJLAR[mesaj] = dmsj

    if PLUGIN_CHANNEL_ID != None:
        print("Pluginl…ôr Y√ºkl…ônir")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
            DOGRU = 1
        except:
            KanalId = "me"
            bot.send_message("me", f"`Plugin_Channel_Id'iniz s…ôhvdi. Pluginl…ôr qalƒ±cƒ± olmuyacaq.`")
            DOGRU = 0

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if DOGRU == 0:
                break
            dosyaa = plugin.file.name
            print(dosyaa)
            if not os.path.exists(os.getcwd() + "/userbot/modules/" + dosyaa):
                dosya = bot.download_media(plugin, os.getcwd() + "/userbot/modules/")
            else:
                print("Bu plugin onsuz y√ºkl…ônib " + dosyaa)
                dosya = dosyaa
            try:
                spec = importlib.util.spec_from_file_location(dosya, dosya)
                mod = importlib.util.module_from_spec(spec)

                spec.loader.exec_module(mod)
            except Exception as e:
                bot.send_message(KanalId, f"`Y√ºkl…ônm…ô alƒ±nmadƒ±! Plugin x…ôtalƒ±.\n\nX…ôta: {e}`")
                plugin.delete()

                if os.path.exists(os.getcwd() + "/userbot/modules/" + dosya):
                    os.remove(os.getcwd() + "/userbot/modules/" + dosya)
                continue

            ndosya = dosya.replace(".py", "")
            CMD_HELP[ndosya] = "Bu plugin qƒ±raƒüdan y√ºkl…ônib"
            bot.send_message(KanalId, f"`Plugin Y√ºkl…ôndi\n\Dosya: {dosya}`")
        if KanalId != "me":
            bot.send_message(KanalId, f"`Pluginl…ôr Y√ºkl…ôndi`")
    else:
        bot.send_message("me", f"`Z…ôhm…ôt olmada pluginl…ôrin aalƒ±cƒ± olmasƒ± √º√ß√ºn PLUGIN_CHANNEL_ID'i d√ºz…ôldin.`")

except PhoneNumberInvalidError:
    print(INVALID_PH)
    exit(1)

for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)

LOGS.info("Botunuz i≈üleyir! Her hansƒ± bir s√∂hbete .alive yazaraq Test edin."
          " K√∂meye rhtiyacƒ±nƒ±z varsa, Destek qrupumuza gelin t.me/DTOUserBot")
LOGS.info("Bot versiya v0.9")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
